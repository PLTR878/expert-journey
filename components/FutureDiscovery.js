// ‚úÖ FutureDiscovery.js ‚Äî Visionary AI: ‡∏´‡∏∏‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏ô‡πâ‡∏≥ ‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï‡πÑ‡∏Å‡∏• (V‚àû.3 ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° API ‡πÉ‡∏´‡∏°‡πà)
import { useEffect, useState } from "react";

export default function FutureDiscovery() {
  const [list, setList] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    loadDiscovery();
  }, []);

  // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å API ‡πÉ‡∏´‡∏°‡πà (visionary-discovery-pro)
  async function loadDiscovery() {
    try {
      setLoading(true);
      const res = await fetch("/api/visionary-discovery-pro", { cache: "no-store" });
      const j = await res.json();

      const arr = j.discovered || [];

      setList(
        arr.map((r) => ({
          symbol: r.symbol,
          name: r.name || "Unknown",
          reason: r.reason || "AI ‡∏û‡∏ö‡∏®‡∏±‡∏Å‡∏¢‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï",
          score: r.aiScore || 0,
          price: r.price || 0,
          sector: r.exchange || "General",
          trend: r.aiScore > 80 ? "Uptrend" : "Sideway",
          signal:
            r.aiScore > 85
              ? "Buy"
              : r.aiScore < 75
              ? "Sell"
              : "Hold",
        }))
      );
    } catch (err) {
      console.error("‚ö†Ô∏è Load discovery failed:", err);
      setList([]);
    } finally {
      setLoading(false);
    }
  }

  return (
    <main className="min-h-screen bg-[#0b1220] text-white px-4 py-4">
      <header className="mb-4">
        <h1 className="text-emerald-400 font-bold text-lg">
          üåã ‡∏´‡∏∏‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏ô‡πâ‡∏≥ ‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï‡πÑ‡∏Å‡∏• (AI Future Discovery Pro)
        </h1>
        <p className="text-gray-400 text-sm">
          AI ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏° ‡πÅ‡∏•‡∏∞‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏∏‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÇ‡∏•‡∏Å‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï
        </p>
      </header>

      {loading ? (
        <div className="text-center text-gray-500 mt-10 animate-pulse">
          ‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï‡∏î‡πâ‡∏ß‡∏¢ AI...
        </div>
      ) : list.length === 0 ? (
        <div className="text-center text-gray-500 mt-10">
          ‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡∏∏‡πâ‡∏ô‡∏ó‡∏µ‡πà AI ‡∏°‡∏≠‡∏á‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏ô‡∏ô‡πâ‡∏≥
        </div>
      ) : (
        <div className="flex flex-col divide-y divide-gray-800/50">
          {list.map((s, i) => (
            <a
              href={`/analyze/${s.symbol}`}
              key={i}
              className="flex justify-between items-center py-3 px-2 hover:bg-[#111827]/50 rounded-md transition-all"
            >
              {/* ‡∏ù‡∏±‡πà‡∏á‡∏ã‡πâ‡∏≤‡∏¢: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô */}
              <div>
                <div className="font-bold text-[15px]">{s.symbol}</div>
                <div className="text-gray-400 text-[12px]">{s.name}</div>
                <div className="text-emerald-400 text-[11px] mt-[2px] max-w-[220px] truncate">
                  üì° {s.reason}
                </div>
              </div>

              {/* ‡∏ù‡∏±‡πà‡∏á‡∏Ç‡∏ß‡∏≤: ‡∏£‡∏≤‡∏Ñ‡∏≤ + ‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì */}
              <div className="text-right font-mono">
                <div className="text-[13px]">${s.price?.toFixed(2)}</div>
                <div
                  className={`text-[12px] font-bold ${
                    s.signal === "Buy"
                      ? "text-green-400"
                      : s.signal === "Sell"
                      ? "text-red-400"
                      : "text-yellow-400"
                  }`}
                >
                  {s.signal}
                </div>
                <div className="text-gray-500 text-[10px]">
                  AI {Math.round(s.score)}%
                </div>
              </div>
            </a>
          ))}
        </div>
      )}
    </main>
  );
  }
