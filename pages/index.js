// ‚úÖ Visionary Stock Screener ‚Äî V‚àû.33 (AI Super Scanner Integrated)
import { useEffect, useState } from "react";
import MarketSection from "../components/MarketSection";
import Favorites from "../components/Favorites";
import Scanner from "../pages/scanner"; // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° Scanner ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á

export default function Home() {
  const [active, setActive] = useState("market");
  const [favorites, setFavorites] = useState([]);
  const [futureDiscovery, setFutureDiscovery] = useState([]);
  const [loadingDiscovery, setLoadingDiscovery] = useState(false);
  const [logs, setLogs] = useState([]);
  const [showLogs, setShowLogs] = useState(false);

  const addLog = (msg) =>
    setLogs((p) => [...p.slice(-50), `${new Date().toLocaleTimeString()} ${msg}`]);

  // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î Favorites ‡∏à‡∏≤‡∏Å localStorage
  useEffect(() => {
    try {
      const saved = localStorage.getItem("favorites");
      if (saved) setFavorites(JSON.parse(saved));
    } catch (e) {
      console.error("‚ùå Load favorites error:", e);
    }
  }, []);

  // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Favorites
  useEffect(() => {
    try {
      localStorage.setItem("favorites", JSON.stringify(favorites));
    } catch (e) {
      console.error("‚ùå Save favorites error:", e);
    }
  }, [favorites]);

  // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏∏‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏ô‡πâ‡∏≥ (‡∏à‡∏≥‡∏ñ‡∏≤‡∏ß‡∏£)
  useEffect(() => {
    const saved = localStorage.getItem("futureDiscovery");
    if (saved) {
      setFutureDiscovery(JSON.parse(saved));
      addLog("‚ôªÔ∏è ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏∏‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏ô‡πâ‡∏≥‡∏à‡∏≤‡∏Å LocalStorage");
    } else {
      loadDiscovery();
    }
  }, []);

  // ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏∏‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏ô‡πâ‡∏≥‡∏à‡∏≤‡∏Å visionary-batch
  async function loadDiscovery() {
    try {
      setLoadingDiscovery(true);
      addLog("üåã AI Discovery ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏∏‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏ô‡πâ‡∏≥...");

      const res = await fetch("/api/visionary-batch?batch=1", { cache: "no-store" });
      const j = await res.json();
      const list = j.results || [];

      if (!list.length) throw new Error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏∏‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏ô‡πâ‡∏≥");

      setFutureDiscovery(list);
      localStorage.setItem("futureDiscovery", JSON.stringify(list));
      addLog(`‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏∏‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏ô‡πâ‡∏≥‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ${list.length} ‡∏ï‡∏±‡∏ß`);
    } catch (err) {
      addLog(`‚ö†Ô∏è Discovery failed: ${err.message}`);
    } finally {
      setLoadingDiscovery(false);
    }
  }

  // ‚úÖ Render ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏™‡πà‡∏ß‡∏ô
  const renderPage = () => {
    if (active === "favorites") {
      return (
        <Favorites
          favorites={favorites}
          setFavorites={setFavorites}
        />
      );
    }

    if (active === "market") {
      return (
        <MarketSection
          title="OriginX  (AI Discovery)"
          loading={loadingDiscovery}
          rows={futureDiscovery}
          favorites={favorites}
          toggleFavorite={(sym) =>
            setFavorites((prev) =>
              prev.includes(sym)
                ? prev.filter((x) => x !== sym)
                : [...prev, sym]
            )
          }
        />
      );
    }

    // ‚úÖ ‡πÅ‡∏Å‡πâ‡∏™‡πà‡∏ß‡∏ô Scanner ‡πÉ‡∏´‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏£‡∏¥‡∏á
    if (active === "scan")
      return (
        <div className="p-4">
          <h2 className="text-xl font-bold text-center mb-4 text-emerald-400">
            üöÄ AI Super Scanner
          </h2>
          <Scanner /> {/* ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å component Scanner ‡∏à‡∏£‡∏¥‡∏á */}
        </div>
      );

    if (active === "trade")
      return (
        <div className="text-center py-20 text-gray-400 italic">
          ü§ñ AI Trade ‚Äî Coming soon...
        </div>
      );

    return null;
  };

  // ‚úÖ UI ‡∏´‡∏•‡∏±‡∏Å
  return (
    <main className="min-h-screen bg-[#0b1220] text-white pb-16">
      <header className="px-3 py-1 h-[4px]" />
      <div className="max-w-6xl mx-auto px-3 pt-2">{renderPage()}</div>

      {/* üß† Logs */}
      <section className="mt-5 mb-10">
        <button
          onClick={() => setShowLogs((p) => !p)}
          className="flex items-center gap-2 bg-[#141b2d] border border-white/10 px-2 py-1 rounded-md text-[11px] text-emerald-400"
        >
          üß† {showLogs ? "Hide Logs" : "Show Logs"}
        </button>
        {showLogs && (
          <div className="mt-2 bg-black/30 rounded-md border border-white/10 p-2 text-[11px] text-gray-400 max-h-44 overflow-auto">
            {logs.map((l, i) => (
              <div key={i}>{l}</div>
            ))}
          </div>
        )}
      </section>

      {/* ‚úÖ Bottom Navigation */}
      <nav className="fixed bottom-0 left-0 right-0 bg-[#0b1220] border-t border-white/5 flex justify-around text-gray-400 text-[11px]">
        {[
          { id: "favorites", label: "Favorites", icon: "üíô" },
          { id: "market", label: "OriginX", icon: "üåã" },
          { id: "scan", label: "Scanner", icon: "üì°" },
          { id: "trade", label: "AI Trade", icon: "ü§ñ" },
        ].map((t) => (
          <button
            key={t.id}
            onClick={() => setActive(t.id)}
            className={`py-1 flex flex-col items-center ${
              active === t.id ? "text-emerald-400" : ""
            }`}
          >
            <span className="text-[16px]">{t.icon}</span>
            {t.label}
          </button>
        ))}
      </nav>
    </main>
  );
  }
