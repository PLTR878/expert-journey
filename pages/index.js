// ===== ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏∏‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏ô‡πâ‡∏≥ (‡πÅ‡∏Å‡πâ‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£‡∏™‡∏∏‡∏î) =====
async function loadDiscovery(retry = 0) {
  try {
    setLoadingDiscovery(true);
    addLog("üåã AI Discovery Pro v2 ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏∏‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏ô‡πâ‡∏≥...");

    const res = await fetch("/api/visionary-discovery-pro-v2", { cache: "no-store" });
    if (!res.ok) throw new Error(`API ${res.status}`);

    const j = await res.json();

    // ‚úÖ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á discovered ‡πÅ‡∏•‡∏∞ top (‡∏Å‡∏±‡∏ô undefined)
    const list = Array.isArray(j.discovered)
      ? j.discovered
      : Array.isArray(j.top)
      ? j.top
      : [];

    if (!list.length) {
      addLog("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏∏‡πâ‡∏ô‡∏à‡∏≤‡∏Å AI Discovery (empty list)");
      setFutureDiscovery([]);
      return;
    }

    // ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
    const formatted = list
      .filter((r) => r && r.symbol)
      .map((r) => ({
        symbol: String(r.symbol || "").toUpperCase(),
        lastClose: Number(r.price ?? 0),
        rsi: Math.round(Number(r.rsi ?? 0)),
        reason:
          r.reason ||
          "AI ‡∏û‡∏ö‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏ï‡πâ‡∏ô‡∏ô‡πâ‡∏≥‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô + ‡∏Ç‡πà‡∏≤‡∏ß‡πÄ‡∏ä‡∏¥‡∏á‡∏ö‡∏ß‡∏Å + ‡∏õ‡∏±‡∏à‡∏à‡∏±‡∏¢‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏î‡∏µ",
        aiScore: Math.round(Number(r.aiScore ?? 0)),
        signal: r.signal || "Hold",
      }));

    setFutureDiscovery(formatted);
    addLog(`‚úÖ ‡∏û‡∏ö‡∏´‡∏∏‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏ô‡πâ‡∏≥ ${formatted.length} ‡∏ï‡∏±‡∏ß‡∏à‡∏≤‡∏Å AI Discovery Pro`);

    // ‚úÖ ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡∏à‡∏£‡∏¥‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞ 30 ‡∏ï‡∏±‡∏ß‡πÅ‡∏£‡∏Å
    for (const s of formatted.slice(0, 30)) {
      try {
        await fetchPrice(s.symbol);
      } catch (err) {
        addLog(`‚ö†Ô∏è Fetch price error for ${s.symbol}: ${err.message}`);
      }
    }
  } catch (err) {
    addLog(`‚ùå Discovery error: ${err.message}`);
    if (retry < 1) setTimeout(() => loadDiscovery(retry + 1), 3000);
  } finally {
    setLoadingDiscovery(false);
  }
}
