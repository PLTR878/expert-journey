// ‚úÖ AI Discovery Pro ‚Äî V‚àû.Full-Auto (‡∏™‡πÅ‡∏Å‡∏ô‡∏´‡∏∏‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏ô‡πâ‡∏≥ 7000 ‡∏ï‡∏±‡∏ß + ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏ï‡πá‡∏°‡∏£‡∏∞‡∏ö‡∏ö)
import stockList from "../../lib/stocklist";
import { analyzeStock } from "../../lib/aiAnalyzer";

export default async function handler(req, res) {
  try {
    const limit = 7000; // ‚úÖ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏∏‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡πÅ‡∏Å‡∏ô (‡πÄ‡∏ï‡πá‡∏°‡∏ï‡∏•‡∏≤‡∏î)
    const selected = stockList.slice(0, limit);

    const logs = [];
    const results = [];

    console.time("AI Discovery Scan");

    for (let i = 0; i < selected.length; i++) {
      const sym = selected[i];
      logs.push(`üß† (${i + 1}/${selected.length}) ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå ${sym} ...`);
      const r = await analyzeStock(sym);

      if (r) {
        logs.push(`‚úÖ ${sym} ‚Üí Score: ${r.aiScore} | ${r.signal} | ${r.reason}`);
        if (r.aiScore > 60) results.push(r); // ‚úÖ ‡∏Ñ‡∏±‡∏î‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏´‡∏∏‡πâ‡∏ô‡∏ó‡∏µ‡πà AI ‡∏°‡∏≠‡∏á‡∏ß‡πà‡∏≤‡πÄ‡∏î‡πà‡∏ô
      } else {
        logs.push(`‚ö†Ô∏è ${sym} ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ`);
      }
    }

    console.timeEnd("AI Discovery Scan");

    // ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏à‡∏≤‡∏Å‡∏™‡∏π‡∏á‡πÑ‡∏õ‡∏ï‡πà‡∏≥ ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å 50 ‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
    const top50 = results.sort((a, b) => b.aiScore - a.aiScore).slice(0, 50);

    res.status(200).json({
      source: "AI Discovery Pro V‚àû.Full-Auto",
      totalScanned: selected.length,
      found: results.length,
      topCount: top50.length,
      discovered: top50,
      timestamp: new Date().toLocaleString("th-TH"),
      logs,
    });
  } catch (err) {
    console.error("‚ùå AI Discovery Error:", err);
    res.status(500).json({ error: err.message });
  }
}
