// ‚úÖ AI Discovery Pro ‚Äî V‚àû.Batch (‡∏™‡πÅ‡∏Å‡∏ô‡∏£‡∏≠‡∏ö‡∏•‡∏∞ 300 ‡∏ï‡∏±‡∏ß ‡∏à‡∏ô‡∏Ñ‡∏£‡∏ö 7000)
import stockList from "../../lib/stocklist";
import { analyzeStock } from "../../lib/aiAnalyzer";

export default async function handler(req, res) {
  try {
    const batchSize = 300; // ‚úÖ ‡∏™‡πÅ‡∏Å‡∏ô‡∏ï‡πà‡∏≠‡∏£‡∏≠‡∏ö
    const totalLimit = 7200; // ‚úÖ ‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const selected = stockList.slice(0, totalLimit);

    const allResults = [];
    const logs = [];

    console.time("AI Discovery Full Scan");

    // üîÅ ‡πÅ‡∏ö‡πà‡∏á‡∏£‡∏≠‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∏‡∏î‡πÜ
    for (let i = 0; i < selected.length; i += batchSize) {
      const batch = selected.slice(i, i + batchSize);
      logs.push(`üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà ${Math.floor(i / batchSize) + 1} (${batch.length} ‡∏ï‡∏±‡∏ß)`);

      const batchResults = await Promise.all(
        batch.map(async (sym) => {
          const r = await analyzeStock(sym);
          if (r && r.aiScore >= 60) {
            return { ...r, batch: Math.floor(i / batchSize) + 1 };
          }
          return null;
        })
      );

      const filtered = batchResults.filter(Boolean);
      allResults.push(...filtered);

      logs.push(`‚úÖ ‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà ${Math.floor(i / batchSize) + 1} ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô: ‡∏û‡∏ö ${filtered.length} ‡∏ï‡∏±‡∏ß‡πÄ‡∏î‡πà‡∏ô`);
      await new Promise((resolve) => setTimeout(resolve, 3000)); // ‚è≥ ‡∏û‡∏±‡∏Å 3 ‡∏ß‡∏¥ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô API ‡∏•‡∏¥‡∏°‡∏¥‡∏ï
    }

    console.timeEnd("AI Discovery Full Scan");

    // ‚úÖ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Top 50 ‡∏à‡∏≤‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const top50 = allResults.sort((a, b) => b.aiScore - a.aiScore).slice(0, 50);

    res.status(200).json({
      source: "AI Discovery Pro (Batch 24x300)",
      scanned: selected.length,
      found: allResults.length,
      topCount: top50.length,
      discovered: top50,
      logs,
      timestamp: new Date().toLocaleString("th-TH"),
    });
  } catch (err) {
    console.error("‚ùå AI Discovery Error:", err);
    res.status(500).json({ error: err.message });
  }
}
