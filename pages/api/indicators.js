import { ema, rsi, macd, atr } from '../../lib/indicators.js';

export default async function handler(req, res) {
  try {
    const { symbol, range = '6mo', interval = '1d' } = req.query;
    const base = `${req.headers['x-forwarded-proto'] || 'https'}://${req.headers.host}`;

    // ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏Ñ‡∏≤‡∏à‡∏≤‡∏Å API history
    const h = await fetch(`${base}/api/history?symbol=${symbol}&range=${range}&interval=${interval}`).then(r => r.json());
    const rows = h.rows || [];
    if (!rows.length) return res.status(404).json({ error: 'no data' });

    // ‚úÖ ‡πÅ‡∏¢‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏Ñ‡∏≤
    const c = rows.map(r => r.c);
    const hi = rows.map(r => r.h);
    const lo = rows.map(r => r.l);
    const lastClose = c.at(-1);

    // ‚úÖ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì indicators
    const ema20 = ema(c, 20).at(-1);
    const ema50 = ema(c, 50).at(-1);
    const ema200 = ema(c, 200).at(-1);

    const R = rsi(c, 14).at(-1);
    const M = macd(c, 12, 26, 9);
    const atr14 = atr(hi, lo, c, 14).at(-1);

    // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
    const safe = v => (Number.isFinite(v) ? v : null);

    // ‚úÖ ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏ü‡∏¥‡∏•‡∏î‡πå (‡∏£‡∏ß‡∏° rsi ‡πÅ‡∏•‡∏∞ rsi14)
    res.status(200).json({
      lastClose: safe(lastClose),
      ema20: safe(ema20),
      ema50: safe(ema50),
      ema200: safe(ema200),
      rsi: safe(R),          // üëà ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏±‡πâ‡∏ô‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤ analyze.js
      rsi14: safe(R),        // üëà ‡∏Ñ‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡∏¥‡∏°‡πÑ‡∏ß‡πâ‡∏î‡πâ‡∏ß‡∏¢
      macd: {
        line: safe(M.line.at(-1)),
        signal: safe(M.signal.at(-1)),
        hist: safe(M.hist.at(-1))
      },
      atr: safe(atr14),
      atr14: safe(atr14)
    });
  } catch (e) {
    console.error("Indicator error:", e);
    res.status(500).json({ error: e.message || "Internal Server Error" });
  }
}
