// ‚úÖ Visionary Option AI API ‚Äî Supreme Summary Engine
// ‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡∏∏‡∏õ‡∏≠‡∏≠‡∏õ‡∏ä‡∏±‡∏ô (Call/Put, ROI, Confidence, Target, Zone) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤ /analyze ‡πÅ‡∏•‡∏∞ Scanner

export default async function handler(req, res) {
  const { symbol } = req.query;
  if (!symbol) return res.status(400).json({ error: "missing symbol" });

  try {
    // üß† ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å‡∏à‡∏≤‡∏Å Visionary Core (‡∏´‡∏£‡∏∑‡∏≠ Infinite)
    const base = await fetch(`${process.env.BASE_URL || ""}/api/visionary-core?symbol=${symbol}`)
      .then((r) => r.json())
      .catch(() => ({}));

    const last = base.lastClose || 0;
    const rsi = base.rsi || 50;
    const trend = base.trend || "Neutral";

    // üß© ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏≠‡∏≠‡∏õ‡∏ä‡∏±‡∏ô
    let action = "Hold";
    let confidence = 60;
    let reason = "‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°";
    let zone = "Neutral Zone";

    let score = 0;
    if (last > base.ema20) score++;
    if (base.ema20 > base.ema50) score++;
    if (base.ema50 > base.ema200) score++;
    if (rsi > 55) score++;
    if (trend === "Uptrend") score += 0.5;
    if (trend === "Downtrend") score -= 0.5;

    if (score >= 3) {
      action = "Buy";
      confidence = 85;
      reason = "‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏Ç‡∏≤‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏£‡∏á";
      zone = "Active Buy Zone";
    } else if (score <= 1) {
      action = "Sell";
      confidence = 75;
      reason = "‡πÅ‡∏£‡∏á‡∏Ç‡∏≤‡∏¢‡∏Å‡∏î‡∏î‡∏±‡∏ô";
      zone = "Caution Zone";
    }

    // üéØ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏£‡∏≤‡∏Ñ‡∏≤
    const target = +(last * (action === "Buy" ? 1.08 : 0.95)).toFixed(2);

    // üí∞ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì Option Call / Put
    const topCall = {
      strike: +(last * 1.03).toFixed(2),
      premium: +(Math.max(0.3, last * 0.03)).toFixed(2),
      roi: +(Math.min(120, confidence + 20)).toFixed(0),
    };
    const topPut = {
      strike: +(last * 0.97).toFixed(2),
      premium: +(Math.max(0.25, last * 0.025)).toFixed(2),
      roi: +(Math.max(10, 100 - confidence)).toFixed(0),
    };

    // ‚úÖ ‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢
    const data = {
      symbol: symbol.toUpperCase(),
      signal: action,
      confidence,
      reason,
      target,
      zone,
      rsi,
      topCall,
      topPut,
    };

    return res.status(200).json(data);
  } catch (err) {
    console.error("‚ùå Option AI Error:", err);
    return res.status(500).json({ error: "Visionary Option AI failed." });
  }
      }
