// /pages/api/summary.js
// ‚úÖ Smart AI News Summarizer ‚Äî ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ OpenAI ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏Ñ‡∏µ‡∏¢‡πå‡πÉ‡∏î ‡πÜ

export default async function handler(req, res) {
  try {
    const { url, lang = "th" } = req.query;
    if (!url) return res.status(400).json({ error: "Missing URL" });

    // üß© ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏ß‡πá‡∏ö‡∏Ç‡πà‡∏≤‡∏ß‡∏ö‡∏≤‡∏á‡πÄ‡∏ß‡πá‡∏ö‡∏ö‡∏•‡πá‡∏≠‡∏Å request (403)
    const response = await fetch(url, {
      headers: { "User-Agent": "Mozilla/5.0 (AI Stock Screener)" },
    });

    if (!response.ok) {
      return res
        .status(response.status)
        .json({ error: `Failed to fetch source: ${response.status}` });
    }

    const html = await response.text();

    // üßπ ‡∏•‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏Ç‡πà‡∏≤‡∏ß (script, style, meta, comment, tag)
    const text = html
      .replace(/<script[^>]*>[\s\S]*?<\/script>/gi, "")
      .replace(/<style[^>]*>[\s\S]*?<\/style>/gi, "")
      .replace(/<meta[^>]*>/gi, "")
      .replace(/<!--.*?-->/g, "")
      .replace(/<[^>]+>/g, " ")
      .replace(/\s+/g, " ")
      .trim()
      .slice(0, 5000); // ‚úÇÔ∏è ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏¥‡∏ô 5000 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£

    // üîç ‡πÅ‡∏¢‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡∏ó‡∏µ‡πà‡∏î‡∏π‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏Ç‡πà‡∏≤‡∏ß‡∏à‡∏£‡∏¥‡∏á
    const sentences = text
      .split(/[.!?]\s+/)
      .filter(
        (s) =>
          s.length > 40 && // ‡∏ï‡∏±‡∏î‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡∏™‡∏±‡πâ‡∏ô ‡πÜ ‡∏≠‡∏≠‡∏Å
          !s.match(/cookie|advert|subscribe|privacy|banner|accept/i)
      )
      .slice(0, 3) // ‡πÄ‡∏≠‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞ 3 ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡πÅ‡∏£‡∏Å
      .join(". ");

    // ü™Ñ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏®‡∏±‡∏û‡∏ó‡πå‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ó‡∏¢ (‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô)
    const translate = (t) =>
      t
        .replace(/Apple/gi, "‡πÅ‡∏≠‡∏õ‡πÄ‡∏õ‡∏¥‡∏•")
        .replace(/Microsoft/gi, "‡πÑ‡∏°‡πÇ‡∏Ñ‡∏£‡∏ã‡∏≠‡∏ü‡∏ó‡πå")
        .replace(/Tesla/gi, "‡πÄ‡∏ó‡∏™‡∏•‡∏≤")
        .replace(/Nvidia/gi, "‡πÄ‡∏≠‡πá‡∏ô‡∏ß‡∏¥‡πÄ‡∏î‡∏µ‡∏¢")
        .replace(/Amazon/gi, "‡πÅ‡∏≠‡∏°‡∏∞‡∏ã‡∏≠‡∏ô")
        .replace(/Google/gi, "‡∏Å‡∏π‡πÄ‡∏Å‡∏¥‡∏•")
        .replace(/stock/gi, "‡∏´‡∏∏‡πâ‡∏ô")
        .replace(/market/gi, "‡∏ï‡∏•‡∏≤‡∏î")
        .replace(/growth/gi, "‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï")
        .replace(/profit/gi, "‡∏Å‡∏≥‡πÑ‡∏£")
        .replace(/company/gi, "‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó")
        .replace(/AI/gi, "‡πÄ‡∏≠‡πÑ‡∏≠")
        .replace(/technology/gi, "‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ")
        .replace(/earnings/gi, "‡∏ú‡∏•‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Å‡∏≤‡∏£")
        .replace(/investment/gi, "‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô");

    // üß† ‡πÅ‡∏õ‡∏•‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏á‡∏†‡∏≤‡∏©‡∏≤‡πÄ‡∏î‡∏¥‡∏°‡∏ï‡∏≤‡∏° query
    let summary =
      lang === "th"
        ? translate(sentences)
        : sentences || "No summary available.";

    // ü©π fallback ‡∏´‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ß‡πà‡∏≤‡∏á
    if (!summary || summary.trim() === "") {
      summary = "No summary available for this page.";
    }

    // ‚úÖ ‡∏™‡πà‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏•‡∏±‡∏ö
    res.status(200).json({ summary });
  } catch (err) {
    console.error("Summary Error:", err);
    res.status(500).json({
      error: "Failed to summarize article",
      details: err.message,
    });
  }
      }
