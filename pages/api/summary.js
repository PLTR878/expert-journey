export default async function handler(req, res) {
  try {
    const { url, lang = "th" } = req.query;
    if (!url) return res.status(400).json({ error: "Missing URL" });

    // ‚úÖ ‡πÉ‡∏ä‡πâ proxy ‡∏ü‡∏£‡∏µ (AllOrigins) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á CORS Block
    const proxyUrl = `https://api.allorigins.win/raw?url=${encodeURIComponent(url)}`;
    const response = await fetch(proxyUrl);
    if (!response.ok)
      return res.status(response.status).json({ error: `Failed to fetch source: ${response.status}` });

    const html = await response.text();

    // ‚úÖ ‡∏î‡∏∂‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô <p> (‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á)
    const matches = html.match(/<p[^>]*>(.*?)<\/p>/gis);
    let text = matches
      ? matches
          .map((m) =>
            m
              .replace(/<[^>]+>/g, "")
              .replace(/\s+/g, " ")
              .trim()
          )
          .join(" ")
      : "";

    // üîπ ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
    text = text.replace(/(Cookies|subscribe|advert|policy|privacy)/gi, "").trim();

    // üîπ ‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡πà‡∏≠ 3‚Äì4 ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡πÅ‡∏£‡∏Å
    const sentences = text.split(/[.!?]\s+/).slice(0, 4).join(". ");

    // üîπ ‡πÅ‡∏õ‡∏•‡πÑ‡∏ó‡∏¢‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
    const translate = (t) =>
      t
        .replace(/Apple/gi, "‡πÅ‡∏≠‡∏õ‡πÄ‡∏õ‡∏¥‡∏•")
        .replace(/Microsoft/gi, "‡πÑ‡∏°‡πÇ‡∏Ñ‡∏£‡∏ã‡∏≠‡∏ü‡∏ó‡πå")
        .replace(/Tesla/gi, "‡πÄ‡∏ó‡∏™‡∏•‡∏≤")
        .replace(/Nvidia/gi, "‡πÄ‡∏≠‡πá‡∏ô‡∏ß‡∏¥‡πÄ‡∏î‡∏µ‡∏¢")
        .replace(/stock/gi, "‡∏´‡∏∏‡πâ‡∏ô")
        .replace(/market/gi, "‡∏ï‡∏•‡∏≤‡∏î")
        .replace(/growth/gi, "‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï")
        .replace(/profit/gi, "‡∏Å‡∏≥‡πÑ‡∏£")
        .replace(/company/gi, "‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó")
        .replace(/AI/gi, "‡πÄ‡∏≠‡πÑ‡∏≠")
        .replace(/technology/gi, "‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ");

    const summary =
      lang === "th"
        ? translate(sentences)
        : sentences || "No summary available.";

    res.status(200).json({ summary });
  } catch (err) {
    console.error("Summary Error:", err);
    res.status(500).json({ error: "Failed to summarize article" });
  }
}
