// ‚úÖ /pages/alerts.js
import { useState } from "react";

export default function AlertsPage() {
  const [running, setRunning] = useState(false);
  const [progress, setProgress] = useState(0);
  const [matches, setMatches] = useState([]);
  const [log, setLog] = useState([]);

  async function playSound() {
    const audio = new Audio("/ding.mp3");
    await audio.play().catch(() => {});
  }

  // ‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö Visionary Eternal API
  async function scanBatch(batch = 1) {
    try {
      const res = await fetch(`/api/visionary-eternal?type=ai-batchscan&batch=${batch}`);
      const data = await res.json();

      if (data.error) throw new Error(data.error);

      // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å log ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤
      setProgress(((batch / 25) * 100).toFixed(1)); // ‡πÅ‡∏™‡∏î‡∏á % ‡∏Ñ‡∏£‡πà‡∏≤‡∏ß ‡πÜ
      setLog((prev) => [
        ...prev,
        `üöÄ Batch ${batch}: ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå ${data.analyzed} ‡∏ï‡∏±‡∏ß | ‡∏û‡∏ö ${data.found} ‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à`,
      ]);

      // ‡∏£‡∏ß‡∏°‡∏´‡∏∏‡πâ‡∏ô‡∏ó‡∏µ‡πà AI ‡∏û‡∏ö
      if (data.top?.length) {
        setMatches((prev) => [...prev, ...data.top]);
        await playSound();
      }

      // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡∏°‡∏µ batch ‡∏ñ‡∏±‡∏î‡πÑ‡∏õ ‡πÉ‡∏´‡πâ‡∏™‡πÅ‡∏Å‡∏ô‡∏ï‡πà‡∏≠
      if (data.nextBatch) {
        await scanBatch(data.nextBatch);
      } else {
        setRunning(false);
        setLog((prev) => [...prev, "‚úÖ ‡∏™‡πÅ‡∏Å‡∏ô‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏ï‡∏±‡∏ß‡πÅ‡∏•‡πâ‡∏ß!"]);
        await playSound();
      }
    } catch (err) {
      setLog((prev) => [...prev, `‚ùå Error: ${err.message}`]);
      setRunning(false);
    }
  }

  const runAutoScan = async () => {
    setRunning(true);
    setMatches([]);
    setLog(["üß† ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡πÅ‡∏Å‡∏ô‡∏´‡∏∏‡πâ‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏ï‡∏•‡∏≤‡∏î‡∏î‡πâ‡∏ß‡∏¢ AI..."]);
    await scanBatch(1);
  };

  return (
    <div className="p-4 text-white bg-[#0b0f17] min-h-screen">
      <h2 className="text-xl font-bold text-emerald-400 mb-2">
        üõ∞Ô∏è Auto Scan ‚Äî US Stocks (AI Batchscan)
      </h2>

      <button
        onClick={runAutoScan}
        disabled={running}
        className={`${
          running ? "bg-gray-600" : "bg-emerald-600 hover:bg-emerald-700"
        } text-white rounded-lg px-4 py-2`}
      >
        {running ? "‚è≥ Scanning..." : "‚ñ∂ Run Now"}
      </button>

      <div className="mt-3">
        <div className="text-sm text-gray-300">Progress: {progress}%</div>
        <div className="h-2 bg-black/40 rounded-full overflow-hidden mt-1">
          <div
            className="h-2 bg-emerald-500 transition-all"
            style={{ width: `${progress}%` }}
          />
        </div>
      </div>

      <ul className="mt-3 text-xs text-gray-300 space-y-1 max-h-64 overflow-auto bg-black/30 rounded-lg p-2">
        {log.map((l, i) => (
          <li key={i}>{l}</li>
        ))}
      </ul>

      <h3 className="text-emerald-400 mt-4 mb-1 font-semibold">
        ‚úÖ ‡∏´‡∏∏‡πâ‡∏ô‡∏ó‡∏µ‡πà AI ‡∏û‡∏ö ({matches.length})
      </h3>
      <ul className="text-sm space-y-1 bg-black/30 rounded-lg p-2">
        {matches.map((m) => (
          <li key={m.symbol}>
            ‚úÖ {m.symbol} ‚Äî ${m.price?.toFixed(2)} | RSI {m.rsi} | AI Score {m.aiScore}
          </li>
        ))}
      </ul>
    </div>
  );
}
